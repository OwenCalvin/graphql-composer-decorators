(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{360:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"enum-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enum-type"}},[t._v("#")]),t._v(" Enum type")]),t._v(" "),s("p",[t._v("Il existe dans GraphQL des types "),s("code",[t._v("enum")]),t._v(", cependant ceux-ci ne supportent pas les décorateurs avec TypeScript. Cela implique qu'il faille utiliser une façon alternative de les déclarer pour "),s("code",[t._v("graphql-composer")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"le-createur-d-enumtype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#le-createur-d-enumtype"}},[t._v("#")]),t._v(" Le créateur d'"),s("code",[t._v("EnumType")])]),t._v(" "),s("p",[t._v("Grâce à la class "),s("code",[t._v("EnumType")]),t._v(" fournie par "),s("code",[t._v("graphql-composer")]),t._v(" vous pouvez créer un type GraphQL "),s("code",[t._v("enum")]),t._v(" en passant votre "),s("code",[t._v("enum")]),t._v(" TypeScript en paramètre.")]),t._v(" "),s("h3",{attrs:{id:"declaration-du-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#declaration-du-type"}},[t._v("#")]),t._v(" Déclaration du type")]),t._v(" "),s("p",[t._v("En premier paramètre vous devez donner le nom du type GraphQL et en deuxième l'enum.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" EnumType "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"graphql-composer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CAT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" animalEnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EnumType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AnimalEnum"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"utilisation-du-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utilisation-du-type"}},[t._v("#")]),t._v(" Utilisation du type")]),t._v(" "),s("p",[t._v("Pour typer vos champs de class TypeScript vous utiliserez donc "),s("code",[t._v("Animal")]),t._v(" et pour type les champs GraphQL ça sera la variable "),s("code",[t._v("animalEnum")]),t._v(" qui sera utilisée.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Field")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" animalEnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  pet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Animal\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);